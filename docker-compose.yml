services:
  # MongoDB база данных
  mongodb:
    image: mongo:7-jammy
    container_name: todo-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: todo-app
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API
  backend:
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    container_name: todo-backend
    restart: unless-stopped
    environment:
      PORT: 3000
      MONGODB_URL: mongodb://admin:password123@mongodb:27017/todo-app?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-super_secret_jwt_key_for_production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-1h}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      CORS_ORIGIN: http://localhost
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - todo-network
    volumes:
      - ./todo-backend:/app
      - /app/node_modules

  # Frontend (Angular + Nginx)
  frontend:
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    container_name: todo-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - todo-network

# Volumes для персистентного хранения данных
volumes:
  mongodb_data:
    driver: local

# Сеть для связи между контейнерами
networks:
  todo-network:
    driver: bridge
